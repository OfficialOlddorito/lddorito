– Create a ScreenGui for the console
local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild(“PlayerGui”)

local screengui = Instance.new(“ScreenGui”)
screengui.Name = “DevConsole”
screengui.Parent = playerGui

– Create the main Frame for the console
local consoleFrame = Instance.new(“Frame”)
consoleFrame.Name = “ConsoleFrame”
consoleFrame.Size = UDim2.new(0.5, 0, 0.4, 0)
consoleFrame.Position = UDim2.new(0.25, 0, 0.3, 0)
consoleFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
consoleFrame.Parent = screengui

– Create a TextBox for command input
local commandInput = Instance.new(“TextBox”)
commandInput.Name = “CommandInput”
commandInput.Size = UDim2.new(1, 0, 0.7, 0)
commandInput.Position = UDim2.new(0, 0, 0.1, 0)
commandInput.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
commandInput.PlaceholderText = “Type your command here…”
commandInput.Parent = consoleFrame

– Create a button to execute the command
local executeButton = Instance.new(“TextButton”)
executeButton.Size = UDim2.new(1, 0, 0.2, 0)
executeButton.Position = UDim2.new(0, 0, 0.9, 0)
executeButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
executeButton.Text = “Execute”
executeButton.Parent = consoleFrame

– Function to execute commands
local function executeCommand(command)
    if command:sub(1, 7) == “require” then
        local success, result = pcall(function()
            local moduleName = command:match(‘require%s*%(%s*"'["’]%s*%)')
            if not moduleName then
                error(“Module name not provided”)
            end
            return require(game.ReplicatedStorage:WaitForChild(moduleName))
        end)

        if success then
            print(“Module Loaded Successfully:”, result)
        else
            warn(“Error executing command:”, result)
        end
    else
        warn(“Command not allowed:”, command)
    end
end

– Button click event
executeButton.MouseButton1Click:Connect(function()
    local command = commandInput.Text
    if command and command ~= “” then
        executeCommand(command)
        commandInput.Text = “”  – Clear the input after execution
    end
end)

– Optional: Execute on Enter key
commandInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local command = commandInput.Text
        if command and command ~= “” then
            executeCommand(command)
            commandInput.Text = “”  – Clear the input after execution
        end
    end
end)

print(“Developer console initialized.”)
