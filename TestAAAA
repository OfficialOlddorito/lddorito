local Players = game:GetService("Players")
local ServerScriptService = game:GetService("ServerScriptService")
local SoundService = game:GetService("SoundService")

-- Load the AssetID using game:GetObjects without InsertService
local function loadAsset(assetId)
    local asset
    local success, err = pcall(function()
        asset = game:GetObjects(assetId)[1] -- Get the asset
    end)
    
    if not success or not asset then
        warn("Failed to load asset: " .. tostring(err))
        return
    end

    -- Check if it's a valid LuaSourceContainer (e.g., Script, LocalScript, etc.)
    if asset:IsA("LuaSourceContainer") then
        asset.Parent = ServerScriptService
        asset.Disabled = false
        print("Successfully loaded asset into ServerScriptService.")
    else
        warn("Asset is not a valid LuaSourceContainer.")
    end
end

-- Play glitch sound on all clients
local function playGlitchSoundForAllClients()
    for _, player in pairs(Players:GetPlayers()) do
        local sound = Instance.new("Sound")
        sound.SoundId = "rbxassetid://17231958102"
        sound.Volume = 1
        sound.Looped = false
        sound.Parent = SoundService
        sound:Play()
        
        -- Clean up sound after it ends
        sound.Ended:Connect(function()
            sound:Destroy()
        end)
    end
end

-- Execute glitch with asset load
local function initializeGlitch(player)
    -- Load asset server-sided
    loadAsset("rbxassetid://364364477")

    -- Play the glitch sound across all clients
    playGlitchSoundForAllClients()
end

-- Connect to players
Players.PlayerAdded:Connect(initializeGlitch)

-- Clean up after 60 seconds
delay(60, function()
    -- Optional: Add clean-up code here
end)
